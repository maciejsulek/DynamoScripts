def Find3DViewId(ViewCol):
	''' Function returns ID of the 3D view. Required to create a new view in Revit. '''
	try:
		for view in ViewCol:
			if view.ViewFamily == ViewFamily.ThreeDimensional:
				ViewId = view.Id
		return ViewId
	except:
		return "Error!"

def FindFilterId(FilterCol, PhaseFilterName):
	''' Function returns ID of a phase filter based on the name fed in. Required to set up a view filter in Revit '''
	try:
		for filter in FilterCol:
			if filter.Name == PhaseFilterName:
				FilterId = filter.Id			
		return FilterId
	except:
		return "Incorrect Phase Filter Name!"
    
def flatten(*args):
    for x in args:
        if hasattr(x, '__iter__'):
            for y in flatten(*x): yield y
        else: yield x

def UniqueIdToIFCGUID(UniqueId):
    
    ''' 
    This UniqueId can be converted into an IFC GUID by XOR-ing the last 8 characters of the EpisodeId and the 8 character
    ElementId. This provides an IFC GUID in standard UUID format. Revit calls this standard UUID format the "DWF GUID" 
    for historical reasons, but it contains the same data as the IFC GUID. It may then be compressed to the 22-character 
    IFC base64 GlobalId attribute. 
   
    	ElementId = 130315 (Decimal) or 1fd0b (Hex)
    	< ........... EpisodeId .......... >-<ElmtId>
	UniqueId = 60f91daf-3dd7-4283-a86d-24137b73f3da-0001fd0b
    '''
    
    unique_id = UniqueId.replace('-', '')
    dwf_guid = unique_id[0:-16] + hex(int(unique_id[-16:-8], 16) ^ int(unique_id[-8:], 16))[2:]
    ifc_guid = ifcopenshell.guid.compress(dwf_guid)
    return ifc_guid

def PurgeDir(parent, extensions):
    for root, dirs, files in os.walk(parent):                                      
        for item in files:
            # Delete subordinate files                                                 
            filespec = os.path.join(root, item)
            for i in extensions:
                if filespec.endswith(i):
                    os.unlink(filespec)
        for item in dirs:
            # Recursively perform this operation for subordinate directories   
            PurgeDir(os.path.join(root, item))
            shutil.rmtree(os.path.join(root, item))
