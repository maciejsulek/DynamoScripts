def Find3DViewId(ViewCol):
''' Function returns ID of a 3D view. Required to create a new view in Revit. ''''
	try:
		for view in ViewCol:
			if view.ViewFamily == ViewFamily.ThreeDimensional:
				ViewId = view.Id
		return ViewId
	except:
		return "Error!"

def FindFilterId(FilterCol, PhaseFilterName):
''' Function returns ID of a phase filter in Revit based on the name fed in. Required to set up a view filter in Revit '''
	try:
		for filter in FilterCol:
			if filter.Name == PhaseFilterName:
				FilterId = filter.Id			
		return FilterId
	except:
		return "Incorrect Phase Filter Name!"
    
def flatten(*args):
''' Function flattens arguments fed in. '''
    for x in args:
        if hasattr(x, '__iter__'):
            for y in flatten(*x): yield y
        else: yield x
        
def PurgeDir(parent):
''' Purge directory. Declare extensions as 'Extensions = []'. '''
    for root, dirs, files in os.walk(parent):                                      
        for item in files:
            # Delete subordinate files                                                 
            filespec = os.path.join(root, item)
            for i in Extensions:
                if filespec.endswith(i):
                    os.unlink(filespec)
        for item in dirs:
            # Recursively perform this operation for subordinate directories   
            PurgeDir(os.path.join(root, item))
            shutil.rmtree(os.path.join(root, item))
